# В лотерее выпущено 100 билетов и в ней участвуют 5 человек, для каждого задано 
# количество приобритенных билетов от 1 до 20. Один выигравший билет выбирается случайно из общего количества.
# В программе необходимо:
# - принять значение количества билетов для каждого участника(5 значений от 1 до 20)
# - расчитать ожидаемые вероятности выигрыша для каждого из участников, вывести их
# - написать алгоритм эмуляции розыгрыша лотереи в виде ф-и, выдающей номер участника победителя
# - провести эмуляцию розыгрыша 10000 раз, вывести агрегированные результаты всех розыгрышей - сколько раз каждый из игроков оказался победителем. 
# В качестве проверки, предлагается посчитать реально получившиеся значения вероятности для каждого из участников, также вывести их.
import random
PEOPLE = 5 # Количество участников
a = 1 # Число-итератор для заполнения пулов участников
f_s, s_s, t_s, fo_s, fi_s = 0, 0, 0, 0, 0 # Статистические переменные
choosen = [] # Список количества купленных билетов участников

"""Функция изменения количества знаков после запятой"""
def toFixed(numObj, digits=0):
	return f"{numObj:.{digits}f}"

def inputin():
	"""Функция ввода количества билетов"""
	val = int(input("Введите количество билетов для участника: "))
	while val < 1 or val > 20:
		if val < 1 or val > 20:
			val = int(input("Неверно!Введите количество билетов для участника: "))
	choosen.append(val)

def draw():
	"""Функция розыгрыша"""
	# global first, second, third, fourth, fivth
	global f_s, s_s, t_s, fo_s, fi_s #Объявление глобальных статистических данных 
	win_ticket = random.randrange(1,100) # Случайный выбор числа
	if win_ticket in first:
		# print("Победил первый участник!")
		f_s += 1
	elif win_ticket in second:
		# print("Победил второй участник!")
		s_s += 1
	elif win_ticket in third:
		# print("Победил третий участник!")
		t_s += 1
	elif win_ticket in fourth:
		# print("Победил четвертый участник!")
		fo_s += 1
	elif win_ticket in fivth:
		# print("Победил пятый участник!")
		fi_s += 1
	else:
		# print("Никто не выиграл!!!")
		pass
	print("Выигрышный билет - ", win_ticket)

def filling(index_mem, number_mem):
	"""Функция заполнения пула выбранного участника"""
	global a
	for i in range(index_mem):
		(number_mem).append(a)
		a += 1
		# print(number_mem, "\n") для проверки заполнения

# Ввод количества билетов

for _ in range(PEOPLE):
	inputin()

# печать вероятностей выигрыша

# print(choosen) #Вывод подряд количества купленных билетов у каждого участника
print("Вероятность выигрыша для первого участника: ", toFixed(choosen[0],2) , "%")
print("Вероятность выигрыша для второго участника: ", toFixed(choosen[1],2) , "%")
print("Вероятность выигрыша для третьего участника: ", toFixed(choosen[2],2) , "%")
print("Вероятность выигрыша для четвертого участника: ", toFixed(choosen[3],2) , "%")
print("Вероятность выигрыша для пятого участника: ", toFixed(choosen[4],2) , "%") #toFixed(((choosen[4]/99)*100),2) , "%") - пробный вариант

# Объявление заполнения пулов 

first, second, third, fourth, fivth = [], [], [], [], [] 
filling(choosen[0], first) 
filling(choosen[1], second)
filling(choosen[2], third)
filling(choosen[3], fourth)
filling(choosen[4], fivth)
# print("\n",first,"\n", second,"\n", third,"\n", fourth,"\n", fivth) # проверка заполнения пула каждого участника

# Розыгрыш

# draw() # - Единичный
input("Едем дальше!") # пауза перед розыгрышем
for _ in range(10000):
	draw()

print("Итоговая статистика: ")
print("Побед первого: ", f_s, " Вероятность: ", f_s/100, "%", "Изначально: ", toFixed(choosen[0],1) , "%" )
print("Побед второго: ", s_s, " Вероятность: ", s_s/100, "%", "Изначально: ", toFixed(choosen[1],1) , "%" )
print("Побед третьего: ", t_s, " Вероятность: ", t_s/100, "%", "Изначально: ", toFixed(choosen[2],1) , "%" )
print("Побед четвертого: ", fo_s, " Вероятность: ", fo_s/100, "%", "Изначально: ", toFixed(choosen[3],1) , "%" )
print("Побед пятого: ", fi_s, " Вероятность: ", fi_s/100, "%", "Изначально: ", toFixed(choosen[4],1) , "%" )

